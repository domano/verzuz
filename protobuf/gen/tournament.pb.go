// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tournament.proto

package tournament

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tournament struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rounds               []*Round       `protobuf:"bytes,2,rep,name=rounds,proto3" json:"rounds,omitempty"`
	Participants         []*Participant `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty"`
	TotalParticipants    []*Participant `protobuf:"bytes,4,rep,name=totalParticipants,proto3" json:"totalParticipants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Tournament) Reset()         { *m = Tournament{} }
func (m *Tournament) String() string { return proto.CompactTextString(m) }
func (*Tournament) ProtoMessage()    {}
func (*Tournament) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_398c1436447bb573, []int{0}
}
func (m *Tournament) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tournament.Unmarshal(m, b)
}
func (m *Tournament) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tournament.Marshal(b, m, deterministic)
}
func (dst *Tournament) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tournament.Merge(dst, src)
}
func (m *Tournament) XXX_Size() int {
	return xxx_messageInfo_Tournament.Size(m)
}
func (m *Tournament) XXX_DiscardUnknown() {
	xxx_messageInfo_Tournament.DiscardUnknown(m)
}

var xxx_messageInfo_Tournament proto.InternalMessageInfo

func (m *Tournament) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tournament) GetRounds() []*Round {
	if m != nil {
		return m.Rounds
	}
	return nil
}

func (m *Tournament) GetParticipants() []*Participant {
	if m != nil {
		return m.Participants
	}
	return nil
}

func (m *Tournament) GetTotalParticipants() []*Participant {
	if m != nil {
		return m.TotalParticipants
	}
	return nil
}

type TournamentRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TournamentRequest) Reset()         { *m = TournamentRequest{} }
func (m *TournamentRequest) String() string { return proto.CompactTextString(m) }
func (*TournamentRequest) ProtoMessage()    {}
func (*TournamentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_398c1436447bb573, []int{1}
}
func (m *TournamentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TournamentRequest.Unmarshal(m, b)
}
func (m *TournamentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TournamentRequest.Marshal(b, m, deterministic)
}
func (dst *TournamentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TournamentRequest.Merge(dst, src)
}
func (m *TournamentRequest) XXX_Size() int {
	return xxx_messageInfo_TournamentRequest.Size(m)
}
func (m *TournamentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TournamentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TournamentRequest proto.InternalMessageInfo

func (m *TournamentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AddParticipantRequest struct {
	TournamentId         int32        `protobuf:"varint,1,opt,name=tournamentId,proto3" json:"tournamentId,omitempty"`
	Participant          *Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddParticipantRequest) Reset()         { *m = AddParticipantRequest{} }
func (m *AddParticipantRequest) String() string { return proto.CompactTextString(m) }
func (*AddParticipantRequest) ProtoMessage()    {}
func (*AddParticipantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_398c1436447bb573, []int{2}
}
func (m *AddParticipantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddParticipantRequest.Unmarshal(m, b)
}
func (m *AddParticipantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddParticipantRequest.Marshal(b, m, deterministic)
}
func (dst *AddParticipantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddParticipantRequest.Merge(dst, src)
}
func (m *AddParticipantRequest) XXX_Size() int {
	return xxx_messageInfo_AddParticipantRequest.Size(m)
}
func (m *AddParticipantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddParticipantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddParticipantRequest proto.InternalMessageInfo

func (m *AddParticipantRequest) GetTournamentId() int32 {
	if m != nil {
		return m.TournamentId
	}
	return 0
}

func (m *AddParticipantRequest) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

type AddParticipantResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddParticipantResponse) Reset()         { *m = AddParticipantResponse{} }
func (m *AddParticipantResponse) String() string { return proto.CompactTextString(m) }
func (*AddParticipantResponse) ProtoMessage()    {}
func (*AddParticipantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tournament_398c1436447bb573, []int{3}
}
func (m *AddParticipantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddParticipantResponse.Unmarshal(m, b)
}
func (m *AddParticipantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddParticipantResponse.Marshal(b, m, deterministic)
}
func (dst *AddParticipantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddParticipantResponse.Merge(dst, src)
}
func (m *AddParticipantResponse) XXX_Size() int {
	return xxx_messageInfo_AddParticipantResponse.Size(m)
}
func (m *AddParticipantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddParticipantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddParticipantResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Tournament)(nil), "tournament.Tournament")
	proto.RegisterType((*TournamentRequest)(nil), "tournament.TournamentRequest")
	proto.RegisterType((*AddParticipantRequest)(nil), "tournament.AddParticipantRequest")
	proto.RegisterType((*AddParticipantResponse)(nil), "tournament.AddParticipantResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TournamentServiceClient is the client API for TournamentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TournamentServiceClient interface {
	GetTournament(ctx context.Context, in *TournamentRequest, opts ...grpc.CallOption) (*Tournament, error)
	AddParticipant(ctx context.Context, in *Participant, opts ...grpc.CallOption) (*AddParticipantResponse, error)
}

type tournamentServiceClient struct {
	cc *grpc.ClientConn
}

func NewTournamentServiceClient(cc *grpc.ClientConn) TournamentServiceClient {
	return &tournamentServiceClient{cc}
}

func (c *tournamentServiceClient) GetTournament(ctx context.Context, in *TournamentRequest, opts ...grpc.CallOption) (*Tournament, error) {
	out := new(Tournament)
	err := c.cc.Invoke(ctx, "/tournament.TournamentService/GetTournament", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tournamentServiceClient) AddParticipant(ctx context.Context, in *Participant, opts ...grpc.CallOption) (*AddParticipantResponse, error) {
	out := new(AddParticipantResponse)
	err := c.cc.Invoke(ctx, "/tournament.TournamentService/AddParticipant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TournamentServiceServer is the server API for TournamentService service.
type TournamentServiceServer interface {
	GetTournament(context.Context, *TournamentRequest) (*Tournament, error)
	AddParticipant(context.Context, *Participant) (*AddParticipantResponse, error)
}

func RegisterTournamentServiceServer(s *grpc.Server, srv TournamentServiceServer) {
	s.RegisterService(&_TournamentService_serviceDesc, srv)
}

func _TournamentService_GetTournament_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TournamentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TournamentServiceServer).GetTournament(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tournament.TournamentService/GetTournament",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TournamentServiceServer).GetTournament(ctx, req.(*TournamentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TournamentService_AddParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Participant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TournamentServiceServer).AddParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tournament.TournamentService/AddParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TournamentServiceServer).AddParticipant(ctx, req.(*Participant))
	}
	return interceptor(ctx, in, info, handler)
}

var _TournamentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tournament.TournamentService",
	HandlerType: (*TournamentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTournament",
			Handler:    _TournamentService_GetTournament_Handler,
		},
		{
			MethodName: "AddParticipant",
			Handler:    _TournamentService_AddParticipant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tournament.proto",
}

func init() { proto.RegisterFile("tournament.proto", fileDescriptor_tournament_398c1436447bb573) }

var fileDescriptor_tournament_398c1436447bb573 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x3d, 0x4e, 0xc3, 0x30,
	0x14, 0x96, 0x53, 0xe8, 0xf0, 0x52, 0x2a, 0xf2, 0x24, 0x8a, 0x15, 0x09, 0x29, 0x32, 0x4b, 0x59,
	0x3a, 0x94, 0x09, 0x31, 0x31, 0x00, 0x62, 0x40, 0xaa, 0x0c, 0x17, 0x08, 0xb5, 0x07, 0x4b, 0x10,
	0x07, 0xdb, 0xe9, 0xa1, 0xb8, 0x0a, 0x97, 0x42, 0x84, 0x16, 0xbf, 0x90, 0x92, 0xf5, 0x7d, 0xff,
	0xb2, 0xe1, 0x38, 0xd8, 0xc6, 0x55, 0xe5, 0x9b, 0xae, 0xc2, 0xa2, 0x76, 0x36, 0x58, 0x84, 0x78,
	0xc9, 0x53, 0x67, 0x9b, 0x4a, 0xfd, 0x00, 0x79, 0x56, 0x97, 0x2e, 0x98, 0xb5, 0xa9, 0xcb, 0x1d,
	0x57, 0x7c, 0x32, 0x80, 0xe7, 0x5f, 0x3a, 0x4e, 0x21, 0x31, 0x8a, 0xb3, 0x82, 0xcd, 0x0f, 0x65,
	0x62, 0x14, 0x5e, 0xc0, 0xb8, 0x35, 0xf0, 0x3c, 0x29, 0x46, 0xf3, 0x74, 0x99, 0x2d, 0x48, 0x9a,
	0xfc, 0x46, 0xe4, 0x96, 0x80, 0xd7, 0x30, 0x21, 0xf6, 0x9e, 0x8f, 0x5a, 0xc1, 0x29, 0x15, 0xac,
	0x22, 0x2e, 0x3b, 0x64, 0xbc, 0x85, 0x2c, 0xd8, 0x50, 0xbe, 0xae, 0xa8, 0xc3, 0xc1, 0xb0, 0x43,
	0x5f, 0x21, 0xce, 0x21, 0x8b, 0x63, 0xa4, 0x7e, 0x6f, 0xb4, 0xef, 0x6d, 0x12, 0x1b, 0x38, 0xb9,
	0x51, 0x8a, 0x3a, 0x6d, 0x89, 0x02, 0x26, 0x31, 0xea, 0x61, 0x27, 0xe9, 0xdc, 0xf0, 0x0a, 0x52,
	0x52, 0x9c, 0x27, 0x05, 0x1b, 0xaa, 0x48, 0xb9, 0x82, 0xc3, 0xec, 0x6f, 0xae, 0xaf, 0x6d, 0xe5,
	0xf5, 0xf2, 0x83, 0xd1, 0xde, 0x4f, 0xda, 0x6d, 0xcc, 0x5a, 0xe3, 0x1d, 0x1c, 0xdd, 0xeb, 0x40,
	0x1e, 0xe7, 0x8c, 0xc6, 0xf4, 0x76, 0xe6, 0xb3, 0xfd, 0x30, 0x3e, 0xc2, 0xb4, 0x9b, 0x8b, 0xff,
	0xf5, 0xcd, 0x05, 0x05, 0xf6, 0x97, 0x7d, 0x19, 0xb7, 0x1f, 0xe7, 0xf2, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0x69, 0xe0, 0xe5, 0x56, 0x78, 0x02, 0x00, 0x00,
}
